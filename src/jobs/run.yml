description: >
  Automatically execute BATS tests as a job.

parameters:
  path:
    description: "REQUIRED: Path containing BATS test script(s)"
    type: string

  formatter:
    description: "Formatter to use for output seen in the step UI. You can also supply a custom formatter."
    type: string
    default: "tap"

  report_formatter:
    description:
      Formatter to use for test report output. By default, "junit" will be selected and parsed by CircleCI.
      If a non-junit compatible formatter is selected, "save_test_results" should be set to false.
    type: string
    default: "junit"

  timing:
    description: "Add timing information to the tests. Recommended for CircleCI test reporting."
    type: boolean
    default: true

  output:
    description: "Write the report results to a file in this given path."
    type: string
    default: "/tmp/bats"

  args:
    description: "Additional arguments to pass to the BATS command. e.x: `--recursive --trace`"
    type: string
    default: ""

  setup-steps:
    description: Add additional steps prior to executing tests. Additional BATS plugins can be loaded here, or other setup scripts.
    type: steps
    default: []

  exec_environment:
    description: Set a custom executor for your BATS testing environment. By default the Docker image 'cimg/base:stable' will be used. BATS will be installed at run time.
    type: executor
    default: default

  save_test_results:
    description:
      Save test results to CircleCI. Note, your formatter must be 'junit' to be parsed by CircleCI.
      If the report format has been changed, or if you do not wish for the test results to be displayed within CircleCI, then set this to 'false'
    type: boolean
    default: true

executor: <<parameters.exec_environment>>

steps:
  - checkout
  - install
  - steps: <<parameters.setup-steps>>
  - run:
      name: Execute BATS tests
      environment:
        ORB_VAL_PATH: <<parameters.path>>
        ORB_VAL_FORMATTER: <<parameters.formatter>>
        ORB_VAL_REPORT_FORMATTER: <<parameters.report_formatter>>
        ORB_VAL_SAVE_TEST_RESULTS: <<parameters.save_test_results>>
        ORB_VAL_OUTPUT: <<parameters.output>>
        ORB_VAL_ARGS: <<parameters.args>>
        ORB_VAL_TIMING: <<parameters.timing>>
      command: <<include(scripts/run-bats.sh)>>
  - when:
      condition: <<parameters.save_test_results>>
      steps:
        - store_test_results:
            path: <<parameters.output>>
